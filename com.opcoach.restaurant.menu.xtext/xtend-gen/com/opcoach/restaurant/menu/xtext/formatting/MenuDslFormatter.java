/**
 * generated by Xtext
 */
package com.opcoach.restaurant.menu.xtext.formatting;

import com.google.inject.Inject;
import com.opcoach.restaurant.menu.xtext.services.MenuDslGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
@SuppressWarnings("all")
public class MenuDslFormatter extends AbstractDeclarativeFormatter {
  @Inject
  @Extension
  private MenuDslGrammarAccess _menuDslGrammarAccess;
  
  protected void configureFormatting(final FormattingConfig c) {
    List<Keyword> _findKeywords = this._menuDslGrammarAccess.findKeywords(",");
    for (final Keyword comma : _findKeywords) {
      {
        FormattingConfig.NoLinewrapLocator _setNoLinewrap = c.setNoLinewrap();
        _setNoLinewrap.before(comma);
        FormattingConfig.NoSpaceLocator _setNoSpace = c.setNoSpace();
        _setNoSpace.before(comma);
        FormattingConfig.LinewrapLocator _setLinewrap = c.setLinewrap();
        _setLinewrap.after(comma);
      }
    }
    FormattingConfig.IndentationLocatorStart _setIndentationIncrement = c.setIndentationIncrement();
    MenuDslGrammarAccess.GroupElements _groupAccess = this._menuDslGrammarAccess.getGroupAccess();
    Keyword _groupKeyword_1 = _groupAccess.getGroupKeyword_1();
    _setIndentationIncrement.before(_groupKeyword_1);
    FormattingConfig.LinewrapLocator _setLinewrap = c.setLinewrap(1);
    MenuDslGrammarAccess.GroupElements _groupAccess_1 = this._menuDslGrammarAccess.getGroupAccess();
    Keyword _groupKeyword_1_1 = _groupAccess_1.getGroupKeyword_1();
    _setLinewrap.before(_groupKeyword_1_1);
    FormattingConfig.IndentationLocatorEnd _setIndentationDecrement = c.setIndentationDecrement();
    MenuDslGrammarAccess.GroupElements _groupAccess_2 = this._menuDslGrammarAccess.getGroupAccess();
    ParserRule _rule = _groupAccess_2.getRule();
    _setIndentationDecrement.after(_rule);
    FormattingConfig.IndentationLocatorStart _setIndentationIncrement_1 = c.setIndentationIncrement();
    MenuDslGrammarAccess.RecipeElements _recipeAccess = this._menuDslGrammarAccess.getRecipeAccess();
    Keyword _recipeKeyword_1 = _recipeAccess.getRecipeKeyword_1();
    _setIndentationIncrement_1.before(_recipeKeyword_1);
    FormattingConfig.LinewrapLocator _setLinewrap_1 = c.setLinewrap(1);
    MenuDslGrammarAccess.RecipeElements _recipeAccess_1 = this._menuDslGrammarAccess.getRecipeAccess();
    Keyword _recipeKeyword_1_1 = _recipeAccess_1.getRecipeKeyword_1();
    _setLinewrap_1.before(_recipeKeyword_1_1);
    FormattingConfig.IndentationLocatorEnd _setIndentationDecrement_1 = c.setIndentationDecrement();
    MenuDslGrammarAccess.RecipeElements _recipeAccess_2 = this._menuDslGrammarAccess.getRecipeAccess();
    ParserRule _rule_1 = _recipeAccess_2.getRule();
    _setIndentationDecrement_1.after(_rule_1);
  }
}
